x-loggin: &logging
  logging:
    driver: json-file
    options:
      max-size: 100m
      max-file: 5

x-labels: &labels
  labels:
    environment: "gmonit"

services:
  clickhouse:
    restart: unless-stopped
    image: clickhouse/clickhouse-server:25.3
    environment:
      CLICKHOUSE_USER: gmonit
      CLICKHOUSE_PASSWORD: ${CLICKHOUSE_PASSWORD}
    healthcheck:
      test: wget --spider -q localhost:8123/ping
      interval: 10s
      timeout: 5s
      retries: 10
    volumes:
       - ./clickhouse/gmonit.xml:/etc/clickhouse-server/config.d/gmonit.xml
       - ./clickhouse/gmonit_system_tables_conf.xml:/etc/clickhouse-server/config.d/gmonit_system_tables_conf.xml
    <<: [*logging, *labels]

  postgres:
    restart: unless-stopped
    image: postgres:13.1
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    healthcheck:
      test: pg_isready -U postgres
      interval: 10s
      timeout: 5s
      retries: 10
    <<: [*logging, *labels]

  redis:
    restart: unless-stopped
    image: redis:7.2
    healthcheck:
      test: redis-cli ping
      interval: 10s
      timeout: 5s
      retries: 10
    <<: [*logging, *labels]

  grafana:
    restart: unless-stopped
    image: cr.yandex/crpih7d63vpcj5dfn8jj/grafana:${TAG:?no_tag}
    environment:
      GMONIT_LICENSE: ${LICENSE_KEY}

      GF_SERVER_ROOT_URL: https://${GRAFANA_DOMAIN}

      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_ADMIN_PASSWORD}

      GMONIT_GRAFANA_CLICKHOUSE_DATASOURCE_URL: http://clickhouse:8123
      GMONIT_GRAFANA_CLICKHOUSE_DATABASE: default
      GMONIT_GRAFANA_CLICKHOUSE_USER: gmonit
      GMONIT_GRAFANA_CLICKHOUSE_PASSWORD: ${CLICKHOUSE_PASSWORD}
      # GMONIT_GRAFANA_CLICKHOUSE_CA_CERT__FILE: /gmonit/ssl/...

      GF_DATABASE_TYPE: postgres
      GF_DATABASE_HOST: postgres:5432
      GF_DATABASE_NAME: postgres
      GF_DATABASE_USER: postgres
      GF_DATABASE_PASSWORD: ${POSTGRES_PASSWORD}
      # GF_DATABASE_MAX_OPEN_CONN: 5

      # GF_DATABASE_CA_CERT_PATH: /gmonit/ssl/...
      # GF_DATABASE_SSL_MODE: verify-full

      GMONIT_GRAFANA_COLLECTOR_URL: http://collector:8080/grafana
      GMONIT_GRAFANA_COLLECTOR_USER: grafana-http-user
      GMONIT_GRAFANA_COLLECTOR_PASSWORD: ${COLLECTOR_DATASOURCE_PASSWORD}

      #Браузерный мониторинг включен для веб-интерфейса GMonit. Это должен быть внешний URL.
      GMONIT_GRAFANA_BROWSER_AGENT_COLLECTOR_URL: https://${COLLECTOR_DOMAIN}

      #Collector использует прогрев пулов с обновления v3-2205. Рекомендуется не менять, если нет проблем с производительностью.
      # USER_AGENT_PARSER_POOL_MAX_TOTAL: 3
      # USER_AGENT_PARSER_POOL_MIN_IDLE: 1

    healthcheck:
      test: wget --spider -q localhost:3000/api/health
      interval: 10s
      timeout: 5s
      retries: 10
    depends_on:
      clickhouse:
        condition: service_healthy
      postgres:
        condition: service_healthy
    volumes:
      - ./ssl:/gmonit/ssl
    <<: [*logging, *labels]

  collector:
    env_file:
      - ttl.env
    restart: unless-stopped
    image: cr.yandex/crpih7d63vpcj5dfn8jj/collector:${TAG:?no_tag}
    environment:
      NEW_RELIC_LOG: stdout
      # NEW_RELIC_LOG_LEVEL: debug
      NEW_RELIC_LICENSE_KEY: 0123456789-123456789-123456789-123456789
      NEW_RELIC_HOST: ${COLLECTOR_DOMAIN}
      NEW_RELIC_APP_NAME: "[GMonit] Collector"

      LICENSE_KEY: ${LICENSE_KEY}

      PORT:               8080
      CLICKHOUSE_URL:     http://clickhouse:8123
      CLICKHOUSE_USER:    gmonit
      CLICKHOUSE_KEY:     ${CLICKHOUSE_PASSWORD}
      CLICKHOUSE_DB:      default
      # CLICKHOUSE_CA_PATH: /gmonit/ssl/...

      REDIS_HOST: redis
      REDIS_PORT: 6379
      # REDIS_PASSWORD:    # optional
      # REDIS_CA_PATH:     # absolute path
      # REDIS_SSL_ENABLED: # true, yes, 1. true, когда задано REDIS_CA_PATH

      SECRET_TOKEN:       ${SECRET_TOKEN}
      BASIC_AUTH_NAME: grafana-http-user
      BASIC_AUTH_PASS: ${COLLECTOR_DATASOURCE_PASSWORD}

      GEOIP_DB_PATH: '/gmonit/geoip.mmdb'
    healthcheck:
      test: curl -f localhost:8080/health
      interval: 10s
      timeout: 5s
      retries: 10
    depends_on:
      clickhouse:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./ssl:/gmonit/ssl
      - ./***.mmdb:/gmonit/geoip.mmdb
    <<: [*logging, *labels]

  nginx:
    restart: unless-stopped
    image: umputun/nginx-le:v1.7.0
    volumes:
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/conf.d-le:/etc/nginx/conf.d-le
      - ./nginx/templates:/etc/nginx/templates
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - 80:80
      - 443:443
    environment:
      GRAFANA_DOMAIN: ${GRAFANA_DOMAIN}
      COLLECTOR_DOMAIN: ${COLLECTOR_DOMAIN}
      TZ: UTC
      LETSENCRYPT: true
      LE_EMAIL: ${LETSENCRYPT_EMAIL}
      LE_FQDN: ${GRAFANA_DOMAIN},${COLLECTOR_DOMAIN}
    networks:
      default:
        aliases:
          - ${GRAFANA_DOMAIN}
          - ${COLLECTOR_DOMAIN}
    <<: [*logging, *labels]

  infra_host:
    restart: unless-stopped
    container_name: newrelic-infra
    image: newrelic/infrastructure-bundle:latest
    cap_add:
      - SYS_PTRACE

    # https://github.com/newrelic/nri-docker/issues/131
    # cgroups v2
    cgroup: host

    network_mode: host
    pid: host
    privileged: true
    volumes:
      - "/:/host:ro"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - ./infra_host:/etc/newrelic-infra/integrations.d
      - ./ssl:/gmonit/ssl
    environment:
      # NRIA_LOG_LEVEL: debug
      NRIA_ENABLE_PROCESS_METRICS: 'true'

      NRIA_LICENSE_KEY: "0123456789012345678901234567890123456789"
      NRIA_COLLECTOR_URL: https://${COLLECTOR_DOMAIN}/infra/infra-api
      NRIA_COMMAND_CHANNEL_URL: https://${COLLECTOR_DOMAIN}/infra/command-api
      NRIA_IDENTITY_URL: https://${COLLECTOR_DOMAIN}/infra/identity-api

      NRIA_SELF_INSTRUMENTATION: newrelic
      NRIA_SELF_INSTRUMENTATION_APM_HOST: ${COLLECTOR_DOMAIN}
      NEW_RELIC_APP_NAME: '[GMonit] Infrastructure Agent'
    <<: [*logging, *labels]

  infra_services:
    restart: unless-stopped
    image: newrelic/infrastructure-bundle:latest
    volumes:
      - ./infra_services:/etc/newrelic-infra/integrations.d
      - ./ssl:/gmonit/ssl
    environment:
      # NRIA_LOG_LEVEL: debug
      NRIA_IS_FORWARD_ONLY: 'true'

      NRIA_LICENSE_KEY: "0123456789012345678901234567890123456789"
      NRIA_COLLECTOR_URL: https://${COLLECTOR_DOMAIN}/infra/infra-api
      NRIA_COMMAND_CHANNEL_URL: https://${COLLECTOR_DOMAIN}/infra/command-api
      NRIA_IDENTITY_URL: https://${COLLECTOR_DOMAIN}/infra/identity-api

      NRIA_SELF_INSTRUMENTATION: newrelic
      NRIA_SELF_INSTRUMENTATION_APM_HOST: ${COLLECTOR_DOMAIN}
      NEW_RELIC_APP_NAME: '[GMonit] Infrastructure Agent'

      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    <<: [*logging, *labels]
