# todo: name, наверное letsencrypt надо назвать
acme_issuer example {
    uri         https://acme-v02.api.letsencrypt.org/directory;
    #contact     admin@example.test;


    # Defines a directory for storing the module data that can be persisted across restarts. This can improve the load time by skipping some requests on startup, and avoid hitting request rate limits on the ACME server.
    # The generated account keys are preserved across reloads, but will be lost on restart unless state_path is configured.


    #state_path  /var/cache/nginx/acme-example; # наверное это должен быть вольюм?
    accept_terms_of_service;
}

# там дподходящие для нас дефолты
# acme_shared_zone zone=ngx_acme_shared:1M;

server {
    listen 80 default_server;
    server_name _;
    return 301 https://$host$request_uri;
}

upstream collector {
    zone collector 64k;
    server collector:8080 resolve;
    keepalive 128;
}

upstream grafana {
    zone grafana 64k;
    server grafana:3000 resolve;
}

server {
    server_name ${COLLECTOR_DOMAIN};
    listen 443 ssl;

    acme_certificate example;
    ssl_certificate       $acme_certificate;
    ssl_certificate_key   $acme_certificate_key;

    # надо разобраться нафига
    # do not parse the certificate on each request
    # ssl_certificate_cache max=2;

    # ssl_certificate         ${SSL_CERT};
    # ssl_certificate_key     ${SSL_KEY};
    # ssl_trusted_certificate ${SSL_CHAIN_CERT};

    # in caddy it's also unlimited, leaving it as is for now
    client_max_body_size 0;

    location / {
         proxy_http_version 1.1;
         proxy_set_header Connection "";

         proxy_set_header   Host $host;
         proxy_pass         http://collector;
    }
}

# This is required to proxy Grafana Live WebSocket connections.
map $http_upgrade $connection_upgrade {
     default upgrade;
     '' close;
}

server {
    server_name ${GRAFANA_DOMAIN};
    listen 443 ssl;

    acme_certificate example;
    ssl_certificate       $acme_certificate;
    ssl_certificate_key   $acme_certificate_key;

    # ssl_certificate         ${SSL_CERT};
    # ssl_certificate_key     ${SSL_KEY};
    # ssl_trusted_certificate ${SSL_CHAIN_CERT};

    location / {
        proxy_set_header Host $host;
        proxy_pass http://grafana;
    }

    # Proxy Grafana Live WebSocket connections.
    location /api/live/ {
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header Host $host;
        proxy_pass http://grafana;
    }
}
