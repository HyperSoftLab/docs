# 1. DNS надо резолвить с таймаутом в 10 сек, чтобы при деплое новый контейнер подхватил
# 2. надо keepalive до коллектора
# 3. я хочу разные server для разных апстримов (опц)

server {
    listen 80 default_server;
    server_name _;
    return 301 https://$host$request_uri;
}

upstream collector {
    zone collector 64k;
    resolver 127.0.0.11 valid=10s;
    server collector:8080 resolve;
    keepalive 128;
}

upstream grafana {
    zone grafana 64k;
    resolver 127.0.0.11 valid=10s;
    server grafana:3000 resolve;
}

server {
    server_name ${COLLECTOR_DOMAIN};
    listen 443 ssl;

    ssl_certificate         ${SSL_CERT};
    ssl_certificate_key     ${SSL_KEY};
    ssl_trusted_certificate ${SSL_CHAIN_CERT};

    # in caddy it's also unlimited, leaving it as is for now
    client_max_body_size 0;

    location / {
         # может и не нужны
         # proxy_redirect     off;
         # proxy_set_header   X-Real-IP $remote_addr;
         # proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;

         proxy_http_version 1.1;
         proxy_set_header Connection "";

         proxy_set_header   Host $host;
         proxy_pass         http://collector;
    }
}

# This is required to proxy Grafana Live WebSocket connections.
map $http_upgrade $connection_upgrade {
     default upgrade;
     '' close;
}

server {
    server_name ${GRAFANA_DOMAIN};
    listen 443 ssl;

    ssl_certificate         ${SSL_CERT};
    ssl_certificate_key     ${SSL_KEY};
    ssl_trusted_certificate ${SSL_CHAIN_CERT};

    location / {
        proxy_set_header Host $host;
        proxy_pass http://grafana;
    }

    # Proxy Grafana Live WebSocket connections.
    location /api/live/ {
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header Host $host;
        proxy_pass http://grafana;
    }
}
